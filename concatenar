// vector de cadena.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include <iostream>
#include "conio.h"
#include <string.h>

using namespace std;

struct tipoX{
	char cad1[15];
	char cad2[15];
	char cad3[15];
	char cad4[15];
};

struct tipoY{
	char cad1[40];
};

void cargar(tipoX vec[],int n){
	int i;

	for(i=0;i<n;i++){
			cout << "introducir el cadena: ";
			do{
				gets(vec[i].cad1);
			}while(strlen(vec[i].cad1) == 0);
			vec[i].cad2[0] = '\0';
			vec[i].cad3[0] = '\0';
			vec[i].cad4[0] = '\0';
	}
}

void mostrar(tipoX vec[], int n){
	int i;
	cout <<endl<<endl<<"los datos son : ";
	for(i=0;i<n;i++){
		cout <<endl<<vec[i].cad1<<" "<<vec[i].cad2<<" "<<vec[i].cad3<<" "<<vec[i].cad4;
	}
}

void copiar(tipoX vec[],int n){
	int i;

	for(i=0;i<n;i++){
			strcpy(vec[i].cad2,vec[i].cad1);
			strcpy(vec[i].cad3,vec[i].cad1);
			strcpy(vec[i].cad4,vec[i].cad1);
	}
}

void concatenar(tipoX vec[], int n, tipoY vectCadena[]){
	int i;

	for(i=0;i<n;i++){
		vectCadena[i].cad1[0] = '\0';
		strcat(vectCadena[i].cad1,vec[i].cad2);
		strcat(vectCadena[i].cad1,vec[i].cad3);
		strcat(vectCadena[i].cad1,vec[i].cad4);
	}
}

void mostrarVecCadena(tipoY vec[], int n){
	int i;
	cout <<endl<<endl<<"los datos vector cadena es : ";
	for(i=0;i<n;i++){
		cout <<endl<<vec[i].cad1;
	}
}

int main(){
	tipoX vectorDeCadenas[20];
	int nroElem;
	tipoY vectCadena[20];
	cout << "introducir nro de elementos : ";
	cin >> nroElem;
	cargar(vectorDeCadenas,nroElem);
	mostrar(vectorDeCadenas,nroElem);
	copiar(vectorDeCadenas,nroElem);
	mostrar(vectorDeCadenas,nroElem);
	concatenar(vectorDeCadenas,nroElem,vectCadena);
	mostrarVecCadena(vectCadena,nroElem);

	getch();
	return (1);
}
